# Markly Environment Configuration
# Copy this file to .env and update values as needed

# ======================
# DATABASE CONFIGURATION
# ======================
MYSQL_ROOT_PASSWORD=rootpassword
MYSQL_DATABASE=markly
MYSQL_USER=markly
MYSQL_PASSWORD=marklypassword

# Backend Database Connection (for local development)
DB_HOST=localhost
DB_PORT=3306
DB_USER=markly
DB_PASSWORD=marklypassword
DB_NAME=markly

# Backend Database Connection (for Docker - uncomment when using docker-compose)
# DB_HOST=mysql
# DB_PORT=3306
# DB_USER=markly
# DB_PASSWORD=marklypassword
# DB_NAME=markly

# ======================
# BACKEND CONFIGURATION
# ======================
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
SERVER_PORT=8080
GO_ENV=development

# ======================
# FRONTEND CONFIGURATION
# ======================
# GraphQL URL for browser requests (client-side)
NEXT_PUBLIC_GRAPHQL_URL=http://localhost:8080/graphql

# GraphQL URL for server actions (server-side, internal Docker network)
# Only needed when running in Docker containers
# GRAPHQL_INTERNAL_URL=http://backend:8080/graphql

# For Docker development, the URLs are automatically set in docker-compose.yml

# ======================
# DEVELOPMENT SETTINGS
# ======================
NODE_ENV=development
NEXT_TELEMETRY_DISABLED=1

# ======================
# DOCKER SPECIFIC
# ======================
# These are used by docker-compose.yml
COMPOSE_PROJECT_NAME=markly

# ======================
# SECURITY NOTES
# ======================
# 1. Never commit the actual .env file to version control
# 2. Change JWT_SECRET to a strong random value in production
# 3. Use strong database passwords in production
# 4. Consider using Docker secrets for production deployments